name: AILang Adapter CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/ailang_adapter/**'
      - 'backend/tools/**'
      - 'frontend/src/ailang/**'
      - '.github/workflows/ailang-adapter-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/ailang_adapter/**'
      - 'backend/tools/**'
      - 'frontend/src/ailang/**'
      - '.github/workflows/ailang-adapter-ci.yml'

jobs:
  test-backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f backend/requirements.txt ]; then pip install -r backend/requirements.txt; fi
        pip install pytest pytest-cov flake8
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 backend/ailang_adapter --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 backend/ailang_adapter --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with pytest
      run: |
        pytest backend/tests/test_ailang_adapter --cov=backend/ailang_adapter --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: backend
        fail_ci_if_error: false

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run ESLint
      run: |
        cd frontend
        npm run lint
    
    - name: Test with Jest
      run: |
        cd frontend
        npm test -- --coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./frontend/coverage/coverage-final.json
        flags: frontend
        fail_ci_if_error: false

  build-docker:
    needs: [test-backend, test-frontend]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build AILang adapter image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile.ailang
        push: false
        tags: ailang-adapter:test
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build AILang dashboard image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile.dashboard
        push: false
        tags: ailang-dashboard:test
        cache-from: type=gha
        cache-to: type=gha,mode=max
